{
	"info": {
		"_postman_id": "c87434d4-a28a-40b4-b5ae-728da6853f85",
		"name": "BlogMern",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34768270"
	},
	"item": [
		{
			"name": "BlogRoutes",
			"item": [
				{
					"name": "Test",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "add blog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Test to check the response is not null\r",
									"pm.test(\"Response is not null\", function () {\r",
									"    var response = xml2Json(pm.response.text());\r",
									"    pm.expect(response).to.not.be.null;\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Understanding Node.js Middleware\",\r\n    \"description\": \"A deep dive into how middleware works in a Node.js application.\",\r\n    \"imageUrl\": \"https://example.com/middleware.jpg\",\r\n    \"paragraphs\": [\r\n        {\r\n            \"title\": \"Introduction\",\r\n            \"description\": \"Middleware in Node.js allows us to execute code during request processing.\",\r\n            \"imageUrl\": \"https://example.com/middleware-intro.jpg\"\r\n        },\r\n        {\r\n            \"title\": \"Types of Middleware\",\r\n            \"description\": \"There are different types of middleware: application-level, router-level, error-handling middleware, etc.\",\r\n            \"imageUrl\": \"https://example.com/middleware-types.jpg\"\r\n        }\r\n    ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/blog/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"blog",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "checkblog",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Understanding Node.js Middleware updated\",\r\n    \"description\": \"A deep dive into how middleware works in a Node.js application.\",\r\n    \"imageUrl\": \"https://example.com/middleware.jpg\",\r\n    \"paragraphs\": [\r\n        {\r\n            \"title\": \"Introduction\",\r\n            \"description\": \"Middleware in Node.js allows us to execute code during request processing.\",\r\n            \"imageUrl\": \"https://example.com/middleware-intro.jpg\"\r\n        },\r\n        {\r\n            \"title\": \"Types of Middleware\",\r\n            \"description\": \"There are different types of middleware: application-level, router-level, error-handling middleware, etc.\",\r\n            \"imageUrl\": \"https://example.com/middleware-types.jpg\"\r\n        }\r\n    ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8000/blog/66dd72cde32b4370c0312881",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"blog",
								"66dd72cde32b4370c0312881"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8000/blog/66e079a120afc0559cf003cb",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8000",
							"path": [
								"blog",
								"66e079a120afc0559cf003cb"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "image",
			"item": [
				{
					"name": "uploadimage",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "testuser",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8000",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000"
				}
			},
			"response": []
		},
		{
			"name": "register",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\":\"abhinav tirole\",\r\n    \"email\":\"abhinav@gmail.com\",\r\n    \"password\":\"abc123\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/auth/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"request": {
				"method": "POST",
				"header": []
			},
			"response": []
		},
		{
			"name": "sendotp",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"tiroleabhinav@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/auth/sendotp",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"auth",
						"sendotp"
					]
				}
			},
			"response": []
		}
	]
}